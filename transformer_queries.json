{
  "ksql": "CREATE STREAM BLOCKS_STREAM (\n  \"cid\" VARCHAR,\n  \"height\" STRING,\n  \"parents\" VARCHAR,\n  \"win_count\" INTEGER,\n  \"miner\" VARCHAR,\n  \"messages_cid\" VARCHAR,\n  \"validated\" BOOLEAN,\n  \"blocksig\" VARCHAR,\n  \"bls_aggregate\" VARCHAR,\n  \"block\" VARCHAR,\n  \"block_time\" BIGINT\n) WITH (kafka_topic='blocks_stream', value_format='JSON');\n\nCREATE STREAM BLOCKS_STREAM_AVRO WITH(PARTITIONS=1, VALUE_FORMAT='AVRO', REPLICAS=1) AS SELECT *\nFROM BLOCKS_STREAM EMIT CHANGES;\n\nCREATE STREAM MESSAGES_STREAM (\n  \"cid\" VARCHAR,\n  \"block_cid\" VARCHAR,\n  \"method\" INTEGER,\n  \"from\" VARCHAR,\n  \"to\" VARCHAR,\n  \"value\" STRING,\n  \"gas\" VARCHAR,\n  \"params\" STRING,\n  \"data\" VARCHAR,\n  \"block_time\" BIGINT\n) WITH (kafka_topic='messages_stream', value_format='JSON');\n\nCREATE STREAM MESSAGES_STREAM_AVRO WITH(PARTITIONS=1, REPLICAS=1, VALUE_FORMAT='AVRO') AS SELECT *\nFROM MESSAGES_STREAM EMIT CHANGES;\n\nCREATE STREAM MESSAGE_RECEIPTS_STREAM (\n  \"cid\" VARCHAR,\n  \"gas_used\" BIGINT,\n  \"exit_code\" INTEGER,\n  \"return\" STRING\n) WITH (kafka_topic='message_receipts_stream', value_format='JSON');\n\nCREATE STREAM MESSAGE_RECEIPTS_STREAM_AVRO WITH(PARTITIONS=1, REPLICAS=1, VALUE_FORMAT='AVRO') AS SELECT *\nFROM MESSAGE_RECEIPTS_STREAM EMIT CHANGES;\n\nCREATE STREAM TIPSETS_STREAM (\n  \"height\" STRING,\n  \"parents\" STRING,\n  \"parent_weight\" STRING,\n  \"parent_state\" VARCHAR,\n  \"blocks\" STRING,\n  \"min_timestamp\" BIGINT,\n  \"state\" INT\n) WITH (kafka_topic='tipsets_stream', value_format='JSON');\n\nCREATE STREAM TIPSETS_STREAM_AVRO WITH(PARTITIONS=1, REPLICAS=1, VALUE_FORMAT='AVRO') AS SELECT *\nFROM TIPSETS_STREAM EMIT CHANGES;\n\nCREATE STREAM TIPSETS_TO_REVERT_STREAM (\n  \"height\" STRING,\n  \"parents\" STRING,\n  \"parent_weight\" STRING,\n  \"parent_state\" VARCHAR,\n  \"blocks\" STRING,\n  \"min_timestamp\" BIGINT,\n  \"state\" INT\n) WITH (kafka_topic='tipsets_to_revert_stream', value_format='JSON');\n\nCREATE STREAM TIPSETS_TO_REVERT_STREAM_AVRO WITH(PARTITIONS=1, VALUE_FORMAT='AVRO', REPLICAS=1) AS SELECT *\nFROM TIPSETS_TO_REVERT_STREAM EMIT CHANGES;\n\nCREATE STREAM ACTOR_STATES_STREAM (\n  \"actor_state_key\" VARCHAR,\n  \"actor_code\" VARCHAR,\n  \"actor_head\" VARCHAR,\n  \"nonce\" STRING,\n  \"balance\" STRING,\n  \"state_root\" VARCHAR,\n  \"height\" STRING,\n  \"ts_key\" VARCHAR,\n  \"parent_ts_key\" VARCHAR,\n  \"addr\" VARCHAR,\n  \"state\" VARCHAR,\n  \"deleted\" BOOLEAN\n) WITH (kafka_topic='actor_states_stream', value_format='JSON');\n\nCREATE STREAM ACTOR_STATES_STREAM_AVRO WITH(PARTITIONS=1, VALUE_FORMAT='AVRO', REPLICAS=1) AS SELECT *\nFROM ACTOR_STATES_STREAM EMIT CHANGES;\n\nCREATE STREAM MINER_INFOS_STREAM (\n  \"miner_info_key\" VARCHAR,\n  \"miner\" VARCHAR,\n  \"owner\" VARCHAR,\n  \"worker\" VARCHAR,\n  \"control_addresses\" STRING,\n  \"new_worker_address\" VARCHAR,\n  \"new_worker_effective_at\" STRING,\n  \"peer_id\" VARCHAR,\n  \"multiaddrs\" STRING,\n  \"seal_proof_type\" INT,\n  \"sector_size\" STRING,\n  \"window_post_partition_sectors\" STRING,\n  \"miner_raw_byte_power\" STRING,\n  \"miner_quality_adj_power\" STRING,\n  \"total_raw_byte_power\" STRING,\n  \"total_quality_adj_power\" STRING,\n  \"height\" STRING\n) WITH (kafka_topic='miner_infos_stream', value_format='JSON');\n\nCREATE STREAM MINER_INFOS_STREAM_AVRO WITH(PARTITIONS=1, VALUE_FORMAT='AVRO', REPLICAS=1) AS SELECT *\nFROM MINER_INFOS_STREAM EMIT CHANGES;\n\nCREATE STREAM MINER_SECTORS_STREAM (\n  \"miner_sector_key\" VARCHAR,\n  \"sector_number\" STRING,\n  \"seal_proof\" INT,\n  \"sealed_cid\" VARCHAR,\n  \"deal_ids\" STRING,\n  \"activation\" STRING,\n  \"expiration\" STRING,\n  \"deal_weight\" STRING,\n  \"verified_deal_weight\" STRING,\n  \"initial_pledge\" STRING,\n  \"expected_day_reward\" STRING,\n  \"expected_storage_pledge\" STRING,\n  \"miner\" VARCHAR,\n  \"height\" STRING\n) WITH (kafka_topic='miner_sectors_stream', value_format='JSON');\n\nCREATE STREAM MINER_SECTORS_STREAM_AVRO WITH(PARTITIONS=1, VALUE_FORMAT='AVRO', REPLICAS=1) AS SELECT *\nFROM MINER_SECTORS_STREAM EMIT CHANGES;\n\nCREATE STREAM REWARD_ACTOR_STATES_STREAM (\n  \"epoch\" STRING,\n  \"actor_code\" VARCHAR,\n  \"actor_head\" VARCHAR,\n  \"nonce\" STRING,\n  \"balance\" STRING,\n  \"state_root\" VARCHAR,\n  \"ts_key\" VARCHAR,\n  \"parent_ts_key\" VARCHAR,\n  \"addr\" VARCHAR,\n  \"cumsum_baseline\" STRING,\n  \"cumsum_realized\" STRING,\n  \"effective_baseline_power\" STRING,\n  \"effective_network_time\" INT,\n  \"this_epoch_baseline_power\" STRING,\n  \"this_epoch_reward\" STRING,\n  \"total_mined\" STRING,\n  \"simple_total\" STRING,\n  \"baseline_total\" STRING,\n  \"total_storage_power_reward\" STRING,\n  \"this_epoch_reward_smoothed_position_estimate\" STRING,\n  \"this_epoch_reward_smoothed_velocity_estimate\" STRING\n) WITH (kafka_topic='reward_actor_states_stream', value_format='JSON');\n\nCREATE STREAM REWARD_ACTOR_STATES_STREAM_AVRO WITH(PARTITIONS=1, VALUE_FORMAT='AVRO', REPLICAS=1) AS SELECT *\nFROM REWARD_ACTOR_STATES_STREAM EMIT CHANGES;",
  "streamsProperties": {}
}